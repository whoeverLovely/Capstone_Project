// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vocabulary.proto

package com.louise.udacity.lib;

public final class VocabularyProtos {
  private VocabularyProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface VocabularyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.Vocabulary)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required string word = 1;</code>
     */
    boolean hasWord();
    /**
     * <code>required string word = 1;</code>
     */
    java.lang.String getWord();
    /**
     * <code>required string word = 1;</code>
     */
    com.google.protobuf.ByteString
        getWordBytes();

    /**
     * <code>required string phonetic = 2;</code>
     */
    boolean hasPhonetic();
    /**
     * <code>required string phonetic = 2;</code>
     */
    java.lang.String getPhonetic();
    /**
     * <code>required string phonetic = 2;</code>
     */
    com.google.protobuf.ByteString
        getPhoneticBytes();

    /**
     * <code>required string definition = 3;</code>
     */
    boolean hasDefinition();
    /**
     * <code>required string definition = 3;</code>
     */
    java.lang.String getDefinition();
    /**
     * <code>required string definition = 3;</code>
     */
    com.google.protobuf.ByteString
        getDefinitionBytes();

    /**
     * <code>required string translation = 4;</code>
     */
    boolean hasTranslation();
    /**
     * <code>required string translation = 4;</code>
     */
    java.lang.String getTranslation();
    /**
     * <code>required string translation = 4;</code>
     */
    com.google.protobuf.ByteString
        getTranslationBytes();
  }
  /**
   * Protobuf type {@code proto.Vocabulary}
   */
  public  static final class Vocabulary extends
      com.google.protobuf.GeneratedMessageLite<
          Vocabulary, Vocabulary.Builder> implements
      // @@protoc_insertion_point(message_implements:proto.Vocabulary)
      VocabularyOrBuilder {
    private Vocabulary() {
      word_ = "";
      phonetic_ = "";
      definition_ = "";
      translation_ = "";
    }
    private int bitField0_;
    public static final int WORD_FIELD_NUMBER = 1;
    private java.lang.String word_;
    /**
     * <code>required string word = 1;</code>
     */
    public boolean hasWord() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string word = 1;</code>
     */
    public java.lang.String getWord() {
      return word_;
    }
    /**
     * <code>required string word = 1;</code>
     */
    public com.google.protobuf.ByteString
        getWordBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(word_);
    }
    /**
     * <code>required string word = 1;</code>
     */
    private void setWord(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      word_ = value;
    }
    /**
     * <code>required string word = 1;</code>
     */
    private void clearWord() {
      bitField0_ = (bitField0_ & ~0x00000001);
      word_ = getDefaultInstance().getWord();
    }
    /**
     * <code>required string word = 1;</code>
     */
    private void setWordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      word_ = value.toStringUtf8();
    }

    public static final int PHONETIC_FIELD_NUMBER = 2;
    private java.lang.String phonetic_;
    /**
     * <code>required string phonetic = 2;</code>
     */
    public boolean hasPhonetic() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string phonetic = 2;</code>
     */
    public java.lang.String getPhonetic() {
      return phonetic_;
    }
    /**
     * <code>required string phonetic = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPhoneticBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(phonetic_);
    }
    /**
     * <code>required string phonetic = 2;</code>
     */
    private void setPhonetic(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      phonetic_ = value;
    }
    /**
     * <code>required string phonetic = 2;</code>
     */
    private void clearPhonetic() {
      bitField0_ = (bitField0_ & ~0x00000002);
      phonetic_ = getDefaultInstance().getPhonetic();
    }
    /**
     * <code>required string phonetic = 2;</code>
     */
    private void setPhoneticBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      phonetic_ = value.toStringUtf8();
    }

    public static final int DEFINITION_FIELD_NUMBER = 3;
    private java.lang.String definition_;
    /**
     * <code>required string definition = 3;</code>
     */
    public boolean hasDefinition() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string definition = 3;</code>
     */
    public java.lang.String getDefinition() {
      return definition_;
    }
    /**
     * <code>required string definition = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDefinitionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(definition_);
    }
    /**
     * <code>required string definition = 3;</code>
     */
    private void setDefinition(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      definition_ = value;
    }
    /**
     * <code>required string definition = 3;</code>
     */
    private void clearDefinition() {
      bitField0_ = (bitField0_ & ~0x00000004);
      definition_ = getDefaultInstance().getDefinition();
    }
    /**
     * <code>required string definition = 3;</code>
     */
    private void setDefinitionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      definition_ = value.toStringUtf8();
    }

    public static final int TRANSLATION_FIELD_NUMBER = 4;
    private java.lang.String translation_;
    /**
     * <code>required string translation = 4;</code>
     */
    public boolean hasTranslation() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string translation = 4;</code>
     */
    public java.lang.String getTranslation() {
      return translation_;
    }
    /**
     * <code>required string translation = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTranslationBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(translation_);
    }
    /**
     * <code>required string translation = 4;</code>
     */
    private void setTranslation(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      translation_ = value;
    }
    /**
     * <code>required string translation = 4;</code>
     */
    private void clearTranslation() {
      bitField0_ = (bitField0_ & ~0x00000008);
      translation_ = getDefaultInstance().getTranslation();
    }
    /**
     * <code>required string translation = 4;</code>
     */
    private void setTranslationBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      translation_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getWord());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getPhonetic());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getDefinition());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeString(4, getTranslation());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getWord());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getPhonetic());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getDefinition());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getTranslation());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.louise.udacity.lib.VocabularyProtos.Vocabulary parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.louise.udacity.lib.VocabularyProtos.Vocabulary parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.louise.udacity.lib.VocabularyProtos.Vocabulary parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.louise.udacity.lib.VocabularyProtos.Vocabulary parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.louise.udacity.lib.VocabularyProtos.Vocabulary parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.louise.udacity.lib.VocabularyProtos.Vocabulary parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.louise.udacity.lib.VocabularyProtos.Vocabulary parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.louise.udacity.lib.VocabularyProtos.Vocabulary parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.louise.udacity.lib.VocabularyProtos.Vocabulary parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.louise.udacity.lib.VocabularyProtos.Vocabulary parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.louise.udacity.lib.VocabularyProtos.Vocabulary prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code proto.Vocabulary}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.louise.udacity.lib.VocabularyProtos.Vocabulary, Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.Vocabulary)
        com.louise.udacity.lib.VocabularyProtos.VocabularyOrBuilder {
      // Construct using com.louise.udacity.lib.VocabularyProtos.Vocabulary.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required string word = 1;</code>
       */
      public boolean hasWord() {
        return instance.hasWord();
      }
      /**
       * <code>required string word = 1;</code>
       */
      public java.lang.String getWord() {
        return instance.getWord();
      }
      /**
       * <code>required string word = 1;</code>
       */
      public com.google.protobuf.ByteString
          getWordBytes() {
        return instance.getWordBytes();
      }
      /**
       * <code>required string word = 1;</code>
       */
      public Builder setWord(
          java.lang.String value) {
        copyOnWrite();
        instance.setWord(value);
        return this;
      }
      /**
       * <code>required string word = 1;</code>
       */
      public Builder clearWord() {
        copyOnWrite();
        instance.clearWord();
        return this;
      }
      /**
       * <code>required string word = 1;</code>
       */
      public Builder setWordBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setWordBytes(value);
        return this;
      }

      /**
       * <code>required string phonetic = 2;</code>
       */
      public boolean hasPhonetic() {
        return instance.hasPhonetic();
      }
      /**
       * <code>required string phonetic = 2;</code>
       */
      public java.lang.String getPhonetic() {
        return instance.getPhonetic();
      }
      /**
       * <code>required string phonetic = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPhoneticBytes() {
        return instance.getPhoneticBytes();
      }
      /**
       * <code>required string phonetic = 2;</code>
       */
      public Builder setPhonetic(
          java.lang.String value) {
        copyOnWrite();
        instance.setPhonetic(value);
        return this;
      }
      /**
       * <code>required string phonetic = 2;</code>
       */
      public Builder clearPhonetic() {
        copyOnWrite();
        instance.clearPhonetic();
        return this;
      }
      /**
       * <code>required string phonetic = 2;</code>
       */
      public Builder setPhoneticBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPhoneticBytes(value);
        return this;
      }

      /**
       * <code>required string definition = 3;</code>
       */
      public boolean hasDefinition() {
        return instance.hasDefinition();
      }
      /**
       * <code>required string definition = 3;</code>
       */
      public java.lang.String getDefinition() {
        return instance.getDefinition();
      }
      /**
       * <code>required string definition = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDefinitionBytes() {
        return instance.getDefinitionBytes();
      }
      /**
       * <code>required string definition = 3;</code>
       */
      public Builder setDefinition(
          java.lang.String value) {
        copyOnWrite();
        instance.setDefinition(value);
        return this;
      }
      /**
       * <code>required string definition = 3;</code>
       */
      public Builder clearDefinition() {
        copyOnWrite();
        instance.clearDefinition();
        return this;
      }
      /**
       * <code>required string definition = 3;</code>
       */
      public Builder setDefinitionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDefinitionBytes(value);
        return this;
      }

      /**
       * <code>required string translation = 4;</code>
       */
      public boolean hasTranslation() {
        return instance.hasTranslation();
      }
      /**
       * <code>required string translation = 4;</code>
       */
      public java.lang.String getTranslation() {
        return instance.getTranslation();
      }
      /**
       * <code>required string translation = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTranslationBytes() {
        return instance.getTranslationBytes();
      }
      /**
       * <code>required string translation = 4;</code>
       */
      public Builder setTranslation(
          java.lang.String value) {
        copyOnWrite();
        instance.setTranslation(value);
        return this;
      }
      /**
       * <code>required string translation = 4;</code>
       */
      public Builder clearTranslation() {
        copyOnWrite();
        instance.clearTranslation();
        return this;
      }
      /**
       * <code>required string translation = 4;</code>
       */
      public Builder setTranslationBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTranslationBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.Vocabulary)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.louise.udacity.lib.VocabularyProtos.Vocabulary();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasWord()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPhonetic()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasDefinition()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasTranslation()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.louise.udacity.lib.VocabularyProtos.Vocabulary other = (com.louise.udacity.lib.VocabularyProtos.Vocabulary) arg1;
          word_ = visitor.visitString(
              hasWord(), word_,
              other.hasWord(), other.word_);
          phonetic_ = visitor.visitString(
              hasPhonetic(), phonetic_,
              other.hasPhonetic(), other.phonetic_);
          definition_ = visitor.visitString(
              hasDefinition(), definition_,
              other.hasDefinition(), other.definition_);
          translation_ = visitor.visitString(
              hasTranslation(), translation_,
              other.hasTranslation(), other.translation_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  word_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  phonetic_ = s;
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  definition_ = s;
                  break;
                }
                case 34: {
                  String s = input.readString();
                  bitField0_ |= 0x00000008;
                  translation_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.louise.udacity.lib.VocabularyProtos.Vocabulary.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:proto.Vocabulary)
    private static final com.louise.udacity.lib.VocabularyProtos.Vocabulary DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Vocabulary();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.louise.udacity.lib.VocabularyProtos.Vocabulary getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Vocabulary> PARSER;

    public static com.google.protobuf.Parser<Vocabulary> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface VocabulariesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.Vocabularies)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
     */
    java.util.List<com.louise.udacity.lib.VocabularyProtos.Vocabulary> 
        getVocabularyList();
    /**
     * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
     */
    com.louise.udacity.lib.VocabularyProtos.Vocabulary getVocabulary(int index);
    /**
     * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
     */
    int getVocabularyCount();
  }
  /**
   * Protobuf type {@code proto.Vocabularies}
   */
  public  static final class Vocabularies extends
      com.google.protobuf.GeneratedMessageLite<
          Vocabularies, Vocabularies.Builder> implements
      // @@protoc_insertion_point(message_implements:proto.Vocabularies)
      VocabulariesOrBuilder {
    private Vocabularies() {
      vocabulary_ = emptyProtobufList();
    }
    public static final int VOCABULARY_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.louise.udacity.lib.VocabularyProtos.Vocabulary> vocabulary_;
    /**
     * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
     */
    public java.util.List<com.louise.udacity.lib.VocabularyProtos.Vocabulary> getVocabularyList() {
      return vocabulary_;
    }
    /**
     * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
     */
    public java.util.List<? extends com.louise.udacity.lib.VocabularyProtos.VocabularyOrBuilder> 
        getVocabularyOrBuilderList() {
      return vocabulary_;
    }
    /**
     * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
     */
    public int getVocabularyCount() {
      return vocabulary_.size();
    }
    /**
     * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
     */
    public com.louise.udacity.lib.VocabularyProtos.Vocabulary getVocabulary(int index) {
      return vocabulary_.get(index);
    }
    /**
     * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
     */
    public com.louise.udacity.lib.VocabularyProtos.VocabularyOrBuilder getVocabularyOrBuilder(
        int index) {
      return vocabulary_.get(index);
    }
    private void ensureVocabularyIsMutable() {
      if (!vocabulary_.isModifiable()) {
        vocabulary_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(vocabulary_);
       }
    }

    /**
     * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
     */
    private void setVocabulary(
        int index, com.louise.udacity.lib.VocabularyProtos.Vocabulary value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureVocabularyIsMutable();
      vocabulary_.set(index, value);
    }
    /**
     * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
     */
    private void setVocabulary(
        int index, com.louise.udacity.lib.VocabularyProtos.Vocabulary.Builder builderForValue) {
      ensureVocabularyIsMutable();
      vocabulary_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
     */
    private void addVocabulary(com.louise.udacity.lib.VocabularyProtos.Vocabulary value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureVocabularyIsMutable();
      vocabulary_.add(value);
    }
    /**
     * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
     */
    private void addVocabulary(
        int index, com.louise.udacity.lib.VocabularyProtos.Vocabulary value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureVocabularyIsMutable();
      vocabulary_.add(index, value);
    }
    /**
     * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
     */
    private void addVocabulary(
        com.louise.udacity.lib.VocabularyProtos.Vocabulary.Builder builderForValue) {
      ensureVocabularyIsMutable();
      vocabulary_.add(builderForValue.build());
    }
    /**
     * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
     */
    private void addVocabulary(
        int index, com.louise.udacity.lib.VocabularyProtos.Vocabulary.Builder builderForValue) {
      ensureVocabularyIsMutable();
      vocabulary_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
     */
    private void addAllVocabulary(
        java.lang.Iterable<? extends com.louise.udacity.lib.VocabularyProtos.Vocabulary> values) {
      ensureVocabularyIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, vocabulary_);
    }
    /**
     * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
     */
    private void clearVocabulary() {
      vocabulary_ = emptyProtobufList();
    }
    /**
     * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
     */
    private void removeVocabulary(int index) {
      ensureVocabularyIsMutable();
      vocabulary_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < vocabulary_.size(); i++) {
        output.writeMessage(1, vocabulary_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < vocabulary_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, vocabulary_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.louise.udacity.lib.VocabularyProtos.Vocabularies parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.louise.udacity.lib.VocabularyProtos.Vocabularies parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.louise.udacity.lib.VocabularyProtos.Vocabularies parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.louise.udacity.lib.VocabularyProtos.Vocabularies parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.louise.udacity.lib.VocabularyProtos.Vocabularies parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.louise.udacity.lib.VocabularyProtos.Vocabularies parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.louise.udacity.lib.VocabularyProtos.Vocabularies parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.louise.udacity.lib.VocabularyProtos.Vocabularies parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.louise.udacity.lib.VocabularyProtos.Vocabularies parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.louise.udacity.lib.VocabularyProtos.Vocabularies parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.louise.udacity.lib.VocabularyProtos.Vocabularies prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code proto.Vocabularies}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.louise.udacity.lib.VocabularyProtos.Vocabularies, Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.Vocabularies)
        com.louise.udacity.lib.VocabularyProtos.VocabulariesOrBuilder {
      // Construct using com.louise.udacity.lib.VocabularyProtos.Vocabularies.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
       */
      public java.util.List<com.louise.udacity.lib.VocabularyProtos.Vocabulary> getVocabularyList() {
        return java.util.Collections.unmodifiableList(
            instance.getVocabularyList());
      }
      /**
       * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
       */
      public int getVocabularyCount() {
        return instance.getVocabularyCount();
      }/**
       * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
       */
      public com.louise.udacity.lib.VocabularyProtos.Vocabulary getVocabulary(int index) {
        return instance.getVocabulary(index);
      }
      /**
       * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
       */
      public Builder setVocabulary(
          int index, com.louise.udacity.lib.VocabularyProtos.Vocabulary value) {
        copyOnWrite();
        instance.setVocabulary(index, value);
        return this;
      }
      /**
       * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
       */
      public Builder setVocabulary(
          int index, com.louise.udacity.lib.VocabularyProtos.Vocabulary.Builder builderForValue) {
        copyOnWrite();
        instance.setVocabulary(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
       */
      public Builder addVocabulary(com.louise.udacity.lib.VocabularyProtos.Vocabulary value) {
        copyOnWrite();
        instance.addVocabulary(value);
        return this;
      }
      /**
       * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
       */
      public Builder addVocabulary(
          int index, com.louise.udacity.lib.VocabularyProtos.Vocabulary value) {
        copyOnWrite();
        instance.addVocabulary(index, value);
        return this;
      }
      /**
       * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
       */
      public Builder addVocabulary(
          com.louise.udacity.lib.VocabularyProtos.Vocabulary.Builder builderForValue) {
        copyOnWrite();
        instance.addVocabulary(builderForValue);
        return this;
      }
      /**
       * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
       */
      public Builder addVocabulary(
          int index, com.louise.udacity.lib.VocabularyProtos.Vocabulary.Builder builderForValue) {
        copyOnWrite();
        instance.addVocabulary(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
       */
      public Builder addAllVocabulary(
          java.lang.Iterable<? extends com.louise.udacity.lib.VocabularyProtos.Vocabulary> values) {
        copyOnWrite();
        instance.addAllVocabulary(values);
        return this;
      }
      /**
       * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
       */
      public Builder clearVocabulary() {
        copyOnWrite();
        instance.clearVocabulary();
        return this;
      }
      /**
       * <code>repeated .proto.Vocabulary vocabulary = 1;</code>
       */
      public Builder removeVocabulary(int index) {
        copyOnWrite();
        instance.removeVocabulary(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.Vocabularies)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.louise.udacity.lib.VocabularyProtos.Vocabularies();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getVocabularyCount(); i++) {
            if (!getVocabulary(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          vocabulary_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.louise.udacity.lib.VocabularyProtos.Vocabularies other = (com.louise.udacity.lib.VocabularyProtos.Vocabularies) arg1;
          vocabulary_= visitor.visitList(vocabulary_, other.vocabulary_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!vocabulary_.isModifiable()) {
                    vocabulary_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(vocabulary_);
                  }
                  vocabulary_.add(
                      input.readMessage(com.louise.udacity.lib.VocabularyProtos.Vocabulary.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.louise.udacity.lib.VocabularyProtos.Vocabularies.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:proto.Vocabularies)
    private static final com.louise.udacity.lib.VocabularyProtos.Vocabularies DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Vocabularies();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.louise.udacity.lib.VocabularyProtos.Vocabularies getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Vocabularies> PARSER;

    public static com.google.protobuf.Parser<Vocabularies> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
